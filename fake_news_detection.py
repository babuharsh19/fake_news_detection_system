# -*- coding: utf-8 -*-
"""fake_news_detection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dRkzGG6s2WIW0jZaNw05RWOxbmLga9fo
"""

import numpy as np
import pandas as pd
import itertools
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import PassiveAggressiveClassifier
from sklearn.metrics import accuracy_score, confusion_matrix
from sklearn.metrics import precision_score, recall_score, f1_score, accuracy_score

#Read the data
df=pd.read_csv('/content/news.csv',error_bad_lines=False)
#Get shape and head
df.shape
df.head()



#Get the labels
labels=df.label
labels.head()

#Split the dataset
x_train,x_test,y_train,y_test=train_test_split(df['text'], labels, test_size=0.2, random_state=7)

#Initialize a TfidfVectorizer
tfidf_vectorizer=TfidfVectorizer(stop_words='english', max_df=0.7)

#Fit and transform train set, transform test set
tfidf_train=tfidf_vectorizer.fit_transform(x_train.values.astype('U')) 
tfidf_test=tfidf_vectorizer.transform(x_test.values.astype('U'))

#DInitialize a PassiveAggressiveClassifier
pac=PassiveAggressiveClassifier(max_iter=50)
pac.fit(tfidf_train,y_train.values.astype('U'))

#Predict on the test set and calculate accuracy
y_pred=pac.predict(tfidf_test)
score=accuracy_score(y_test.astype(str),y_pred.astype(str))
print(f'Accuracy: {round(score*100,2)}%')

#Build confusion matrix
confusion_matrix(y_test.astype(str),y_pred.astype(str), labels=['FAKE','REAL'])

import matplotlib.pyplot as plt
import numpy
from sklearn import metrics

actual = numpy.random.binomial(1,.9,size = 1000)
predicted = numpy.random.binomial(1,.9,size = 1000)

confusion_matrix = metrics.confusion_matrix(y_test.astype(str), y_pred.astype(str))

cm_display = metrics.ConfusionMatrixDisplay(confusion_matrix = confusion_matrix, display_labels = [False, True])

cm_display.plot()
plt.show()

print('Precision: %.3f' % precision_score(y_test, y_pred, average="binary", pos_label="REAL"))

print('Recall: %.3f' % recall_score(y_test, y_pred, average="binary", pos_label="REAL"))

print('F1 Score: %.3f' % f1_score(y_test, y_pred, average="binary", pos_label="REAL"))

!git init

!git config --global user.email babuharsh19@gmail.com
!git config --global user.name babuharsh19

!git add -A

!git commit -m "first commit"

!git branch -M main

!ssh-keyscan -H github.com >> ~/.ssh/known_hosts

!ssh-keygen -t ed25519 -C babuharsh19@gmail.com

!chown -R root .git/

!ssh -vT git@github.com

!git clone git@github.com:babuharsh19/fake_news_detection_system.git

!git remote add origin https://babuharsh19:Harsh@2002@github.com/babuharsh19/fake_news_detection_system.git

!git push -u origin main